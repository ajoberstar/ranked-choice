plugins {
  id 'gradle-clojure.clojure' version '0.4.0-beta.10'
  id 'gradle-clojure.clojurescript' version '0.4.0-beta.10'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '2.0.4'
  id 'org.ajoberstar.grgit' version '2.2.1'
  id 'org.ajoberstar.reckon' version '0.7.0'
}

mainClassName = 'ranked_choice.main'

reckon {
  scopeFromProp()
  snapshotFromProp()
}

repositories {
  mavenCentral()
  maven {
    name = 'clojars'
    url = 'https://repo.clojars.org/'
  }
}

dependencies {
  // backend
  implementation 'org.clojure:clojure:latest.release'
  implementation 'org.clojure:tools.logging:latest.release'
  implementation 'mount:mount:latest.release'
  implementation 'org.clojure:core.async:latest.release'

  // http
  implementation 'ring:ring-core:latest.release'
  implementation 'ring:ring-defaults:latest.release'
  implementation 'ring:ring-json:latest.release'
  implementation 'http-kit:http-kit:latest.release'

  // routing
  implementation 'bidi:bidi:latest.release'

  // rendering
  implementation 'hiccup:hiccup:latest.release'

  // frontend
  implementation 'org.clojure:clojurescript:latest.release'
  implementation 're-frame:re-frame:latest.release'

  // testing
  testImplementation 'junit:junit:latest.release'

  // development
  devImplementation 'com.bhauman:figwheel-main:latest.release'
  devRuntimeOnly 'cider:cider-nrepl:0.17.0'
}

dependencyLocking {
  lockAllConfigurations()
}

clojurescript {
  builds {
    all {
      compiler {
        outputTo = 'public/js/main.js'
        outputDir = 'public/js/out'
        assetPath = 'js/out'
        main = 'ranked-choice.main'
      }
    }
    main {
      compiler {
        optimizations = 'advanced'
        sourceMap = 'public/js/main.js.map'
      }
    }
    dev {
      compiler {
        optimizations = 'none'
        preloads = ['ranked-choice.dev']
      }
    }
  }
}
